version: "3.13"
services:
  db-visits:
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - /src/.env
    ports:
      - "5437:5432"
    networks:
      - mc_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web-visits:
    build: .
    command: /app/start.sh
    volumes:
      - ./src:/app/src
    ports:
      - "8600:8600"
    env_file:
      - /src/.env
    networks:
      - mc_network
    depends_on:
      db-visits:
        condition: service_healthy
      redis:
        condition: service_started
      celery-worker:
        condition: service_started
      celery-beat:
        condition: service_started

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - mc_network

  celery-worker:
    build: .
    command: celery -A src.core worker --loglevel=info
    depends_on:
      - redis
    volumes:
      - ./src:/app/src
    env_file:
      - /src/.env
    environment:
      - PYTHONPATH=/app/src
      - DJANGO_SETTINGS_MODULE=src.core.settings
    networks:
      - mc_network

  celery-beat:
    build: .
    command: celery -A src.core beat --loglevel=debug
    depends_on:
      - redis
    volumes:
      - ./src:/app/src
    env_file:
      - /src/.env
    environment:
      - PYTHONPATH=/app/src
      - DJANGO_SETTINGS_MODULE=src.core.settings
    networks:
      - mc_network
networks:
  mc_network:
    external: true